# Split something you've done into two parts. This is useful if you've forgotten to stop a did at some point. To use it you simply need to find the specific did and then call splitDid like this --splitDid=secondsAfterStartToSplit[,taskName[,who[,comment]]] ~ doneit
#onDefine aliasFeature splitDid,split

loop
	# Check that we have sane values
	set Tmp,passed,true
	
	if ~!Global,splitDid-0!~,<,0,
		set Tmp,passed,false
		debug 0,splitDid: secondsAfterStartToSplit (~!Global,splitDid-0!~) is too small
	
	basicMaths Tmp,splitTime,~!Result,start!~,+,~!Global,splitDid-0!~
	
	if ~!Result,stop!~,!=,,
		if ~!Tmp,splitTime!~,>,~!Result,stop!~,
			set Tmp,passed,false
			debug 0,splitDid: secondsAfterStartToSplit is greater than the duration of the did.
	
	if ~!Tmp,passed!~,==,true,
		debug 0,closeDid ~!Result,start!~,~!Tmp,splitTime!~
		closeDid ~!Result,start!~,~!Tmp,splitTime!~
		
		# TODO write code to take optional information
		debug 0,openDid ~!Result,taskName!~,~!Result,who!~,~!Result,comment!~,~!Tmp,splitTime!~
		openDid ~!Result,taskName!~,~!Result,who!~,~!Result,comment!~,~!Tmp,splitTime!~
		
		if ~!Result,stop!~,!=,,
			# We have a stop position
			debug 0,closeDid ~!Tmp,splitTime!~,~!Result,stop!~
			closeDid ~!Tmp,splitTime!~,~!Result,stop!~
	
	unset Tmp,passed
	unset Tmp,splitTime

stashResults Tmp,dids
retrieveResults DoneIt,dids
sortOnKey
stashResults DoneIt,dids
retrieveResults Tmp,dids

unset Tmp,dids
