# What are you doing right now? And for who? --doing=name[,who[,description[,timeOffset]]] eg --doing='fixComp',bob,'fixing computer' . timeOffset will offset the timestamp by the specified amount. The timestamp defaults to the current time. A positive timeOffset will add that offset to the beginning of the task that is about to bcome obsolete. A negative timeOffset subtracts from the currnt time. Ie -180 says that you started the task 3 minutes ago. ~ doneit,user

parameters name,who,description,timeOffset

# Do we match any tasks
listTasks ~!Local,name!~
countToVar Local,count


set Local,createNew,false
if ~!Local,count!~,==,0,
	# We don't have a task to do.

	if ~!Local,description!~,==,,
		debug 0,doing: I can't find a task matching "^~!Local,name!~$". If you'd like to add it please include who and a description.
	else
		if ~!Local,who!~,==,,
			debug 0,doing: I can't find a task matching "^~!Local,name!~$". If you'd like to add it please include who and a description.
		else
			debug 1,doing: Adding task ~!Local,description!~
			addTask ~!Local,name!~,~!Local,who!~,~!Local,description!~
			listTasks ~!Local,name!~
			countToVar Local,count
			set Local,createNew,true

	clear
	nested

if ~!Local,count!~,!=,0,
	# We have a task to do, let's do it.


	set Local,changeOver,
	# figure out when the change happens
	if ~!Local,timeOffset!~,==,,
		debug 1,doing: No time specified, setting it to now
		now Local,changeOver
	elseIf ~!Local,timeOffset!~,>,~!Time,fuzzyTimeThreshold!~,
		debug 1,doing: It's either a really big offset, or it's an absolute time. Assume it's an absolute time.
		set Local,changeOver,~!Local,timeOffset!~
	else
		if ~!Local,timeOffset!~,<,0,
			debug 1,doing: It's a negative offset, go from now+(-offset)
			now Tmp,now
			basicMaths Local,changeOver,~!Tmp,now!~,+,~!Local,timeOffset!~
			unset Tmp,now
		else
			debug 1,doing: It's a positive offset, go from the end of the previous task + offset
			basicMaths Local,changeOver,~!DoneIt,dids,~!DoneIt,lastDid!~,start!~,+,~!Local,timeOffset!~


	# Get task ID of the task to be done
	first
	loop
		set DoneIt,lastTask,~!Result,name!~
		set DoneIt,lastWho,~!Result,lastWho!~

	# Close off the old task
	if ~!DoneIt,lastDid!~,!=,,
		closeDid ~!DoneIt,lastDid!~,~!Local,changeOver!~
	else
		debug 1,doing: No previous did to close.

	# Save the task
	debug 1,doing: Setting new task to start from ~!Local,changeOver!~
	set DoneIt,lastDid,~!Local,changeOver!~

	if ~!Local,who!~,!=,,
		debug 2,doing: Setting who to ~!Local,who!~
		set DoneIt,lastWho,~!Local,who!~

	# TODO id->ID

	if ~!Local,createNew!~,==,false,
		openDid ~!DoneIt,lastTask!~,~!DoneIt,lastWho!~,~!Local,description!~,~!DoneIt,lastDid!~
	else
		openDid ~!DoneIt,lastTask!~,~!DoneIt,lastWho!~,,~!DoneIt,lastDid!~


	# Output what we have just added
	isolate
		listDids
		last 2
		templateOut didNoTotal
		outNow
		null
